# core HAL config file for simulation - 4 axis

# load RT modules
loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT   servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS  num_dio=20

#base_period_nsec=[EMCMOT]BASE_PERIOD
# load parameters save

# hostmot2 driver
loadrt hostmot2
loadrt hm2_eth board_ip="10.10.10.10" config=" num_encoders=2 num_pwmgens=0 num_rcpwmgens=1 num_stepgens=5 sserial_port_0=20000000 ssi_chan_0=steps%2bzencoder%12s ssi_chan_1=steps%2byencoder%12s enable_raw"
setp   hm2_7i80.0.watchdog.timeout_ns 60000000
loadrt stepgen step_type=0,0,0,0,0 ctrl_type=v,v,p,p,p
setp hm2_7i80.0.stepgen.timer-number 1





addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf hm2_7i80.0.read          servo-thread
addf hm2_7i80.0.write         servo-thread

setp hm2_7i80.0.dpll.01.timer-us -50
setp hm2_7i80.0.dpll.02.timer-us -100
setp hm2_7i80.0.dpll.03.timer-us -150
setp hm2_7i80.0.dpll.04.timer-us -200


setp hm2_7i80.0.packet-error-limit  500

setp scarakins.D1 300.0
setp scarakins.D2 330.0  #join0
setp scarakins.D3 118.0
setp scarakins.D4 220.0
setp scarakins.D5 50.0
setp scarakins.D6 0.0




setp hm2_7i80.0.rcpwmgen.rate 50 # hm2_7i80.0.rcpwmgen.ratehz
setp hm2_7i80.0.rcpwmgen.00.width 0
setp hm2_7i80.0.rcpwmgen.00.offset 0.1



# estop loopback
net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change iocontrol.0.tool-changed


# add motion controller functions to servo thread

#setp hm2_[HOSTMOT2](BOARD).0.gpio.034.is_output true  #1
#setp hm2_[HOSTMOT2](BOARD).0.gpio.036.is_output true  #2
#setp hm2_[HOSTMOT2](BOARD).0.gpio.038.is_output true  #3
#setp hm2_[HOSTMOT2](BOARD).0.gpio.040.is_output true  #4
#setp hm2_[HOSTMOT2](BOARD).0.gpio.042.is_output true  #5
#setp hm2_[HOSTMOT2](BOARD).0.gpio.043.is_output true  #6
#setp hm2_[HOSTMOT2](BOARD).0.gpio.044.is_output true  #7
#setp hm2_[HOSTMOT2](BOARD).0.gpio.045.is_output true  #8
#setp hm2_[HOSTMOT2](BOARD).0.gpio.046.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.047.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.048.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.049.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.050.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.035.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.037.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.039.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.041.is_output true

setp hm2_[HOSTMOT2](BOARD).0.gpio.051.is_output true  #1
setp hm2_[HOSTMOT2](BOARD).0.gpio.053.is_output true  #2
setp hm2_[HOSTMOT2](BOARD).0.gpio.055.is_output true  #3
setp hm2_[HOSTMOT2](BOARD).0.gpio.057.is_output true  #4
setp hm2_[HOSTMOT2](BOARD).0.gpio.059.is_output true  #5
setp hm2_[HOSTMOT2](BOARD).0.gpio.060.is_output true  #6
setp hm2_[HOSTMOT2](BOARD).0.gpio.061.is_output true  #7
setp hm2_[HOSTMOT2](BOARD).0.gpio.062.is_output true  #8

setp hm2_[HOSTMOT2](BOARD).0.gpio.063.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.064.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.065.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.066.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.067.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.052.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.054.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.056.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.058.is_output true

setp hm2_[HOSTMOT2](BOARD).0.gpio.051.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.053.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.055.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.057.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.059.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.060.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.061.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.062.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.063.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.064.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.065.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.066.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.067.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.052.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.054.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.056.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.058.invert_output true



net x-amp-enable => hm2_[HOSTMOT2](BOARD).0.gpio.051.out
net y-amp-enable => hm2_[HOSTMOT2](BOARD).0.gpio.053.out
net zena joint.2.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.02.enable
net zena joint.2.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.gpio.055.out
net aena joint.3.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.03.enable
net aena joint.3.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.gpio.057.out
net cena joint.4.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.04.enable
# Cai home pin 
net homeswitchesX <= hm2_[HOSTMOT2](BOARD).0.gpio.047.in
net homeswitchesX => joint.0.home-sw-in
#net homeswitchesX => joint.0.neg-lim-sw-in
#net homeswitchesX => joint.0.pos-lim-sw-in

net homeswitchesY <= hm2_[HOSTMOT2](BOARD).0.gpio.046.in
net homeswitchesY => joint.1.home-sw-in
#net homeswitchesX => joint.0.neg-lim-sw-in
#net homeswitchesX => joint.0.pos-lim-sw-in
net homeswitchesZ <= hm2_[HOSTMOT2](BOARD).0.gpio.048.in
net homeswitchesZ => joint.2.home-sw-in
net homeswitchesC <= hm2_[HOSTMOT2](BOARD).0.gpio.049.in
net homeswitchesC => joint.3.home-sw-in
# amp control

net xflt joint.0.amp-fault-in
net yflt joint.1.amp-fault-in
net zflt joint.2.amp-fault-in
net aflt joint.3.amp-fault-in



#loadusr -W mworkscaragui
#loadusr -W scaragui

#net j0 joint.0.pos-fb mworkscaragui.joint0
#net j1 joint.1.pos-fb mworkscaragui.joint1
#net z-pos-fb mworkscaragui.joint2
#net j3 joint.3.pos-fb mworkscaragui.joint3
#net j0 joint.0.pos-fb scaragui.joint0
#net j1 joint.1.pos-fb scaragui.joint1
#net j2 joint.2.pos-fb scaragui.joint2
#net j3 joint.3.pos-fb scaragui.joint3

net :kinstype-select <= motion.analog-out-03 => motion.switchkins-type

net pinOut1 motion.digital-out-01 => hm2_[HOSTMOT2](BOARD).0.gpio.063.out
net pinOut0 motion.digital-out-00 => hm2_[HOSTMOT2](BOARD).0.gpio.064.out
net pinOut2 motion.digital-out-02 => hm2_[HOSTMOT2](BOARD).0.gpio.065.out
net pinOut3 motion.digital-out-03 => hm2_[HOSTMOT2](BOARD).0.gpio.066.out
net pinOut4 motion.digital-out-04 => hm2_[HOSTMOT2](BOARD).0.gpio.067.out

#net cyclestart <= hm2_[HOSTMOT2](BOARD).0.gpio.048.in => halui.program.run
net pinIn1 <= hm2_[HOSTMOT2](BOARD).0.gpio.038.in => motion.digital-in-01
net pinIn0 <= hm2_[HOSTMOT2](BOARD).0.gpio.040.in => motion.digital-in-00
