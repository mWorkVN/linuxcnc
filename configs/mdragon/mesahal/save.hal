# core HAL config file for simulation - 4 axis

# load RT modules
loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT   servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS  num_dio=20
loadrt ddt count=10
#base_period_nsec=[EMCMOT]BASE_PERIOD
# load parameters save

# hostmot2 driver
loadrt hostmot2
loadrt hm2_eth board_ip="10.10.10.10" config=" num_encoders=2 num_pwmgens=0 num_rcpwmgens=1 num_stepgens=5 sserial_port_0=20000000 ssi_chan_0=steps%2bzencoder%12s ssi_chan_1=steps%2byencoder%12s enable_raw"
#ssi_chan_0=steps%2bzencoder%12um 
setp   hm2_7i80.0.watchdog.timeout_ns 60000000
loadrt sum2 count=1
loadrt stepgen step_type=0,0,0,0,0 ctrl_type=v,v,p,p,p
loadrt pid names=pid.x,pid.y,pid.z,pid.a

addf hm2_7i80.0.read          servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.a.do-pid-calcs       servo-thread

addf sum2.0 servo-thread

addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf hm2_7i80.0.write         servo-thread

setp hm2_7i80.0.dpll.01.timer-us -50
setp hm2_7i80.0.dpll.02.timer-us -150
setp hm2_7i80.0.dpll.03.timer-us -150
setp hm2_7i80.0.dpll.04.timer-us -200
setp hm2_7i80.0.stepgen.timer-number 1

setp hm2_7i80.0.packet-error-limit  500

setp scarakins.D1 400.0
setp scarakins.D2 350.0
setp scarakins.D3 75.0
setp scarakins.D4 350.0
setp scarakins.D5 200.0
setp scarakins.D6 0.0

addf ddt.0 servo-thread
addf ddt.1 servo-thread
addf ddt.2 servo-thread
addf ddt.3 servo-thread
addf ddt.4 servo-thread
addf ddt.5 servo-thread
addf ddt.6 servo-thread
addf ddt.7 servo-thread
addf ddt.8 servo-thread
addf ddt.9 servo-thread


#setp hm2_7i80.0.pwmgen.00.out0.invert_output  1
#setp hm2_7i80.0.pwmgen.pwm_frequency 5000
#setp hm2_7i80.0.pwmgen.00.scale 5000
#setp hm2_7i80.0.pwmgen.00.output-type 1

#net spindle-speed-cmd spindle.0.speed-out => hm2_[HOSTMOT2](BOARD).0.pwmgen.00.value
#net spindle-on spindle.0.on => hm2_[HOSTMOT2](BOARD).0.pwmgen.00.enable



setp hm2_7i80.0.rcpwmgen.rate 50 # hm2_7i80.0.rcpwmgen.ratehz
setp hm2_7i80.0.rcpwmgen.00.width 0
setp hm2_7i80.0.rcpwmgen.00.offset 0.1


# create HAL signals for position commands from motion module



#set gain for sum2 = in0*gain0 + in1*gain1
#setp sum2.0.gain0 1
#setp sum2.0.gain1 0.069333333333337
#net J2pos sum2.0.in0 <= joint.2.motor-pos-cmd
#net J3pos hm2_[HOSTMOT2](BOARD).0.stepgen.03.position-cmd sum2.0.in1 <= joint.3.motor-pos-cmd
#net J2posE hm2_[HOSTMOT2](BOARD).0.stepgen.02.position-cmd <= sum2.0.out 

# timing parameters

# X

#net J0pos hm2_[HOSTMOT2](BOARD).0.stepgen.00.velocity-cmd <= joint.0.motor-pos-cmd
setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true
setp   pid.x.maxerror 0.0001
net x-index-enable  <=> pid.x.index-enable
net x-amp-enable    =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net j0-pos-fbss       =>  pid.x.feedback
net x-output        <=  pid.x.output
setp hm2_7i80.0.stepgen.00.dirsetup        [JOINT_0]DIRSETUP
setp hm2_7i80.0.stepgen.00.dirhold         [JOINT_0]DIRHOLD
setp hm2_7i80.0.stepgen.00.steplen         [JOINT_0]STEPLEN
setp hm2_7i80.0.stepgen.00.stepspace       [JOINT_0]STEPSPACE
setp hm2_7i80.0.stepgen.00.position-scale  [JOINT_0]STEP_SCALE
setp hm2_7i80.0.stepgen.00.maxvel          [JOINT_0]STEPGEN_MAX_VEL
setp hm2_7i80.0.stepgen.00.maxaccel        [JOINT_0]STEPGEN_MAX_ACC
setp hm2_7i80.0.stepgen.00.step_type       0
setp hm2_7i80.0.stepgen.00.control-type     1

# ---closedloop stepper signals---

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-vel-cmd    <= joint.0.vel-cmd
net x-output     <= hm2_[HOSTMOT2](BOARD).0.stepgen.00.velocity-cmd
net x-amp-enable joint.0.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.00.enable

setp hm2_7i80.0.ssi.00.frequency-khz 250  
setp hm2_7i80.0.ssi.00.timer-number 2
setp hm2_7i80.0.ssi.00.zencoder-scalemax 180
net j0-pos-fbss  hm2_7i80.0.ssi.00.zencoder
net j0-pos-fbss => joint.0.motor-pos-fb





setp joint.0.jog-vel-mode 1
setp axis.x.jog-vel-mode 1


# Y
setp   pid.y.Pgain     [JOINT_1]P
setp   pid.y.Igain     [JOINT_1]I
setp   pid.y.Dgain     [JOINT_1]D
setp   pid.y.bias      [JOINT_1]BIAS
setp   pid.y.FF0       [JOINT_1]FF0
setp   pid.y.FF1       [JOINT_1]FF1
setp   pid.y.FF2       [JOINT_1]FF2
setp   pid.y.deadband  [JOINT_1]DEADBAND
setp   pid.y.maxoutput [JOINT_1]MAX_OUTPUT
setp   pid.y.error-previous-target true
setp   pid.y.maxerror 0.0001
net y-index-enable  <=> pid.y.index-enable
net y-amp-enable    =>  pid.y.enable
net y-pos-cmd       =>  pid.y.command
net j1-pos-fbss       =>  pid.y.feedback
net y-output        <=  pid.y.output
#net J1pos hm2_[HOSTMOT2](BOARD).0.stepgen.01.position-cmd <= joint.1.motor-pos-cmd
setp hm2_7i80.0.stepgen.01.dirsetup        [JOINT_1]DIRSETUP
setp hm2_7i80.0.stepgen.01.dirhold         [JOINT_1]DIRHOLD
setp hm2_7i80.0.stepgen.01.steplen         [JOINT_1]STEPLEN
setp hm2_7i80.0.stepgen.01.stepspace       [JOINT_1]STEPSPACE
setp hm2_7i80.0.stepgen.01.position-scale  [JOINT_1]STEP_SCALE
setp hm2_7i80.0.stepgen.01.maxvel          [JOINT_1]STEPGEN_MAX_VEL
setp hm2_7i80.0.stepgen.01.maxaccel        [JOINT_1]STEPGEN_MAX_ACC
setp hm2_7i80.0.stepgen.01.step_type       0
setp hm2_7i80.0.stepgen.00.control-type     1

# ---closedloop stepper signals---

net y-pos-cmd    <= joint.1.motor-pos-cmd
net y-vel-cmd    <= joint.1.vel-cmd
net y-output     <= hm2_[HOSTMOT2](BOARD).0.stepgen.01.velocity-cmd
net y-amp-enable joint.1.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.01.enable

setp hm2_7i80.0.ssi.01.frequency-khz 250  
setp hm2_7i80.0.ssi.01.timer-number 2
setp hm2_7i80.0.ssi.01.yencoder-scalemax 180
net j1-pos-fbss  hm2_7i80.0.ssi.01.yencoder
net j1-pos-fbss => joint.1.motor-pos-fb
net y-pos-fb     <=  hm2_[HOSTMOT2](BOARD).0.stepgen.01.position-fb




setp joint.1.jog-vel-mode 1
setp axis.y.jog-vel-mode 1







net J2pos hm2_[HOSTMOT2](BOARD).0.stepgen.02.position-cmd <= joint.2.motor-pos-cmd
setp hm2_7i80.0.stepgen.02.dirsetup        [JOINT_2]DIRSETUP
setp hm2_7i80.0.stepgen.02.dirhold         [JOINT_2]DIRHOLD
setp hm2_7i80.0.stepgen.02.steplen         [JOINT_2]STEPLEN
setp hm2_7i80.0.stepgen.02.stepspace       [JOINT_2]STEPSPACE
setp hm2_7i80.0.stepgen.02.position-scale  [JOINT_2]STEP_SCALE
setp hm2_7i80.0.stepgen.02.maxvel          [JOINT_2]STEPGEN_MAX_VEL
setp hm2_7i80.0.stepgen.02.maxaccel        [JOINT_2]STEPGEN_MAX_ACC
setp hm2_7i80.0.stepgen.02.step_type       0

net J3pos hm2_[HOSTMOT2](BOARD).0.stepgen.03.position-cmd <= joint.3.motor-pos-cmd
setp hm2_7i80.0.stepgen.03.dirsetup        [JOINT_3]DIRSETUP
setp hm2_7i80.0.stepgen.03.dirhold         [JOINT_3]DIRHOLD
setp hm2_7i80.0.stepgen.03.steplen         [JOINT_3]STEPLEN
setp hm2_7i80.0.stepgen.03.stepspace       [JOINT_3]STEPSPACE
setp hm2_7i80.0.stepgen.03.position-scale  [JOINT_3]STEP_SCALE
setp hm2_7i80.0.stepgen.03.maxvel          [JOINT_3]STEPGEN_MAX_VEL
setp hm2_7i80.0.stepgen.03.maxaccel        [JOINT_3]STEPGEN_MAX_ACC
setp hm2_7i80.0.stepgen.03.step_type       0


net J4pos hm2_[HOSTMOT2](BOARD).0.stepgen.04.position-cmd <= joint.4.motor-pos-cmd
setp hm2_7i80.0.stepgen.04.dirsetup        [JOINT_4]DIRSETUP
setp hm2_7i80.0.stepgen.04.dirhold         [JOINT_4]DIRHOLD
setp hm2_7i80.0.stepgen.04.steplen         [JOINT_4]STEPLEN
setp hm2_7i80.0.stepgen.04.stepspace       [JOINT_4]STEPSPACE
setp hm2_7i80.0.stepgen.04.position-scale  [JOINT_4]STEP_SCALE
setp hm2_7i80.0.stepgen.04.maxvel          [JOINT_4]STEPGEN_MAX_VEL
setp hm2_7i80.0.stepgen.04.maxaccel        [JOINT_4]STEPGEN_MAX_ACC
setp hm2_7i80.0.stepgen.04.step_type       0


#net J0pos => joint.0.motor-pos-fb
#net J1pos => joint.1.motor-pos-fb
net J3pos => joint.3.motor-pos-fb
net J2pos => joint.2.motor-pos-fb
net J4pos => joint.4.motor-pos-fb



#setp joint.0.motor-offset 0
#net motor.00.pos-fb <= hm2_[HOSTMOT2](BOARD).0.stepgen.00.position-fb
#net motor.00.pos-fb => joint.0.motor-pos-fb

#.position
#net z-pos-fb => joint.2.motor-pos-fb
#net z-pos-rawcountsww <= hm2_7i80.0.ssi.00.zencoder.rawcounts
#setp hm2_7i80.0.raw.read_address 0x6900 
#show pin hm2_7i80.0.read_data
# send the position commands thru differentiators to
# generate velocity and accel signals
# define the signals, and hook them up

net J0pos => ddt.0.in
net J0vel <= ddt.0.out
net J0vel => ddt.1.in
net J0acc <= ddt.1.out

net J1pos => ddt.2.in
net J1vel <= ddt.2.out
net J1vel => ddt.3.in
net J1acc <= ddt.3.out

net J2pos => ddt.4.in
net J2vel <= ddt.4.out
net J2vel => ddt.5.in
net J2acc <= ddt.5.out

net J3pos => ddt.6.in
net J3vel <= ddt.6.out
net J3vel => ddt.7.in
net J3acc <= ddt.7.out

net J4pos => ddt.8.in
net J4vel <= ddt.8.out
net J4vel => ddt.9.in
net J4acc <= ddt.9.out

# estop loopback
net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change iocontrol.0.tool-changed


# add motion controller functions to servo thread

#setp hm2_[HOSTMOT2](BOARD).0.gpio.034.is_output true  #1
#setp hm2_[HOSTMOT2](BOARD).0.gpio.036.is_output true  #2
#setp hm2_[HOSTMOT2](BOARD).0.gpio.038.is_output true  #3
#setp hm2_[HOSTMOT2](BOARD).0.gpio.040.is_output true  #4
#setp hm2_[HOSTMOT2](BOARD).0.gpio.042.is_output true  #5
#setp hm2_[HOSTMOT2](BOARD).0.gpio.043.is_output true  #6
#setp hm2_[HOSTMOT2](BOARD).0.gpio.044.is_output true  #7
#setp hm2_[HOSTMOT2](BOARD).0.gpio.045.is_output true  #8
#setp hm2_[HOSTMOT2](BOARD).0.gpio.046.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.047.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.048.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.049.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.050.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.035.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.037.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.039.is_output true
#setp hm2_[HOSTMOT2](BOARD).0.gpio.041.is_output true

setp hm2_[HOSTMOT2](BOARD).0.gpio.051.is_output true  #1
setp hm2_[HOSTMOT2](BOARD).0.gpio.053.is_output true  #2
setp hm2_[HOSTMOT2](BOARD).0.gpio.055.is_output true  #3
setp hm2_[HOSTMOT2](BOARD).0.gpio.057.is_output true  #4
setp hm2_[HOSTMOT2](BOARD).0.gpio.059.is_output true  #5
setp hm2_[HOSTMOT2](BOARD).0.gpio.060.is_output true  #6
setp hm2_[HOSTMOT2](BOARD).0.gpio.061.is_output true  #7
setp hm2_[HOSTMOT2](BOARD).0.gpio.062.is_output true  #8

setp hm2_[HOSTMOT2](BOARD).0.gpio.063.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.064.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.065.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.066.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.067.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.052.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.054.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.056.is_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.058.is_output true

setp hm2_[HOSTMOT2](BOARD).0.gpio.051.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.053.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.055.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.057.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.059.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.060.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.061.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.062.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.063.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.064.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.065.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.066.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.067.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.052.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.054.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.056.invert_output true
setp hm2_[HOSTMOT2](BOARD).0.gpio.058.invert_output true



net x-amp-enable => hm2_[HOSTMOT2](BOARD).0.gpio.051.out
net y-amp-enable => hm2_[HOSTMOT2](BOARD).0.gpio.053.out
net zena joint.2.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.02.enable
net zena joint.2.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.gpio.055.out
net aena joint.3.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.03.enable
net aena joint.3.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.gpio.057.out
net cena joint.4.amp-enable-out => hm2_[HOSTMOT2](BOARD).0.stepgen.04.enable
# Cai home pin 
net homeswitchesX <= hm2_[HOSTMOT2](BOARD).0.gpio.047.in
net homeswitchesX => joint.0.home-sw-in
#net homeswitchesX => joint.0.neg-lim-sw-in
#net homeswitchesX => joint.0.pos-lim-sw-in

net homeswitchesY <= hm2_[HOSTMOT2](BOARD).0.gpio.046.in
net homeswitchesY => joint.1.home-sw-in
#net homeswitchesX => joint.0.neg-lim-sw-in
#net homeswitchesX => joint.0.pos-lim-sw-in
net homeswitchesZ <= hm2_[HOSTMOT2](BOARD).0.gpio.048.in
net homeswitchesZ => joint.2.home-sw-in
net homeswitchesC <= hm2_[HOSTMOT2](BOARD).0.gpio.049.in
net homeswitchesC => joint.3.home-sw-in
# amp control

net xflt joint.0.amp-fault-in
net yflt joint.1.amp-fault-in
net zflt joint.2.amp-fault-in
net aflt joint.3.amp-fault-in



#loadusr -W mworkscaragui
#loadusr -W scaragui

#net j0 joint.0.pos-fb mworkscaragui.joint0
#net j1 joint.1.pos-fb mworkscaragui.joint1
#net z-pos-fb mworkscaragui.joint2
#net j3 joint.3.pos-fb mworkscaragui.joint3
#net j0 joint.0.pos-fb scaragui.joint0
#net j1 joint.1.pos-fb scaragui.joint1
#net j2 joint.2.pos-fb scaragui.joint2
#net j3 joint.3.pos-fb scaragui.joint3

net :kinstype-select <= motion.analog-out-03 => motion.switchkins-type

net pinOut1 motion.digital-out-01 => hm2_[HOSTMOT2](BOARD).0.gpio.063.out
net pinOut0 motion.digital-out-00 => hm2_[HOSTMOT2](BOARD).0.gpio.064.out
net pinOut2 motion.digital-out-02 => hm2_[HOSTMOT2](BOARD).0.gpio.065.out
net pinOut3 motion.digital-out-03 => hm2_[HOSTMOT2](BOARD).0.gpio.066.out
net pinOut4 motion.digital-out-04 => hm2_[HOSTMOT2](BOARD).0.gpio.067.out

#net cyclestart <= hm2_[HOSTMOT2](BOARD).0.gpio.048.in => halui.program.run
net pinIn1 <= hm2_[HOSTMOT2](BOARD).0.gpio.038.in => motion.digital-in-01
net pinIn0 <= hm2_[HOSTMOT2](BOARD).0.gpio.040.in => motion.digital-in-00
